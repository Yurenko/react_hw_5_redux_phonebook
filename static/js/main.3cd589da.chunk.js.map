{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContastForm/ContactForm.module.css","components/ContactList/Group.module.css","MyPhonebook.module.css","App.module.css","components/ContastForm/ContactForm.js","redux/filterSelector.js","redux/filterAction.js","components/ContastForm/ContactFormContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","App.js","redux/filterReducer.js","redux/srore.js","index.js"],"names":["module","exports","ContactForm","state","id","name","number","sortName","contacts","some","contact","handleChange","e","target","value","setState","shortid","generate","handleSubmit","preventDefault","props","alert","addUser","prevProps","this","localStorage","setItem","JSON","stringify","onSubmit","className","style","form","htmlFor","type","pattern","title","required","onChange","button","Component","PropsType","PropTypes","string","defaultProps","getContacts","filterReducer","getFilter","filter","inputFilter","createSelector","i","toLowerCase","includes","ActionsType","connect","dispatch","user","payload","Filter","handleFilter","example","handleDelete","length","TransitionGroup","component","map","item","CSSTransition","timeout","classNames","group","list","onClick","contactDeleteAction","ContactList","App","isOn","onProp","ls","getItem","items","parse","window","addEventListener","fetch","wrapper","in","myPhonebook","filerSuccessActions","combineReducers","rootStorage","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,KAAO,0BAA0B,OAAS,8B,mBCAnGD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,8B,mBCA5DD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,mBCAhID,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,kC,mBCAlJD,EAAOC,QAAU,CAAC,QAAU,uB,kLCKtBC,E,4MAWJC,MAAQ,CACNC,GAAI,GACJC,KAAM,GACNC,OAAQ,I,EAUVC,SAAW,SAACC,EAAUH,GAAX,OACTG,EAASC,MAAK,SAAAC,GAAO,OAAIA,EAAQL,OAASA,M,EAE5CM,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,EAAKC,SAAL,aACEX,GAAIY,IAAQC,YACXZ,EAAOS,K,EAIZI,aAAe,SAAAN,GACb,IAAQE,EAAUF,EAAEC,OAAOR,KAAnBS,MACRF,EAAEO,iBACQ,EAAKZ,SAAS,EAAKa,MAAMZ,SAAUM,GAI3CO,MAAM,GAAD,OAAIP,EAAJ,4BAFL,EAAKM,MAAME,QAAQ,EAAKnB,OAK1B,EAAKY,SAAS,CACZX,GAAI,GACJC,KAAM,GACNC,OAAQ,M,wDAhCZ,SAAmBiB,GACjB,IAAQf,EAAagB,KAAKJ,MAAlBZ,SACJe,EAAUf,WAAaA,GACzBiB,aAAaC,QAAQ,WAAYC,KAAKC,UAAUpB,M,oBAiCpD,WACE,MAAyBgB,KAAKrB,MAAtBE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMuB,SAAUL,KAAKN,aAAcY,UAAWC,IAAMC,KAApD,UACE,wBAAOC,QAAQ,OAAf,iBAEE,uBACEC,KAAK,OACL7B,KAAK,OACL8B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRvB,MAAOT,EACPD,GAAG,OACHkC,SAAUd,KAAKb,kBAGnB,wBAAOsB,QAAQ,SAAf,mBAEE,uBACEC,KAAK,MACL7B,KAAK,SACL8B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRjC,GAAG,SACHU,MAAOR,EACPgC,SAAUd,KAAKb,kBAGnB,wBAAQuB,KAAK,SAASJ,UAAWC,IAAMQ,OAAvC,2B,GAnFkBC,aAApBtC,EACGuC,UAAY,CACjBpC,KAAMqC,IAAUC,OAChBrC,OAAQoC,IAAUC,QAHhBzC,EAMG0C,aAAe,CACpBvC,KAAM,GACNC,OAAQ,IAmFGJ,Q,QC/FF2C,EAAc,SAAA1C,GAAK,OAAIA,EAAM2C,cAActC,UAE3CuC,EAAY,SAAA5C,GAAK,OAAIA,EAAM2C,cAAcE,QAEzCC,EAAcC,YACzB,CAACL,EAAaE,IACd,SAACvC,EAAUwC,GAAX,OACExC,EAASwC,QAAO,SAAAG,GAAC,OAAIA,EAAE9C,KAAK+C,cAAcC,SAASL,EAAOI,qBCTjDE,EAEK,iBAFLA,EAIE,cAJFA,EAKK,iBALLA,EAMG,eCODC,eARS,SAAApD,GAAK,MAAK,CAChCK,SAAUqC,EAAY1C,OAGG,SAAAqD,GAAQ,MAAK,CACtClC,QAAS,SAAAmC,GAAI,OAAID,EDQsB,CACvCtB,KAAMoB,EACNI,QCV2CD,QAG9BF,CAA6CrD,GCK7CyD,MAhBf,YAAgD,IAAD,IAA7BX,cAA6B,MAApB,GAAoB,EAAhBY,EAAgB,EAAhBA,aAC7B,OACE,8BACE,uBACE1B,KAAK,OACL7B,KAAK,OACL8B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRvB,MAAOkC,EACPV,SAAUsB,OCCHL,eARS,SAAApD,GAAK,MAAK,CAChC6C,OAAQD,EAAU5C,OAGO,SAAAqD,GAAQ,MAAK,CACtCI,aAAc,SAAAhD,GAAC,OAAI4C,GHkBYb,EGlBe/B,EAAEC,OAAOC,MHkBb,CAC1CoB,KAAMoB,EACNI,QAASf,KAFsB,IAAAA,MGflBY,CAA6CI,G,0CCiB7CA,MAzBf,YAAiD,IAAD,IAA9BE,eAA8B,MAApB,GAAoB,EAAhBC,EAAgB,EAAhBA,aAC9B,OACE,qBAAKhC,UAAWC,IAAMvB,SAAtB,SACGqD,EAAQE,OAAS,GAChB,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKnC,UAAWC,IAAMrB,QAAjD,SACGmD,EAAQK,KAAI,SAAAC,GAAI,OACf,cAACC,EAAA,EAAD,CAA6BC,QAAS,IAAKC,WAAYC,IAAvD,SACE,qBAAkBzC,UAAWC,IAAMyC,KAAnC,UACGL,EAAK9D,KADR,MACiB8D,EAAK7D,OACpB,wBACEwB,UAAWC,IAAMQ,OACjBL,KAAK,SACLuC,QAAS,kBAAMX,EAAaK,EAAK/D,KAHnC,iBAFO+D,EAAK/D,KADI+D,EAAK/D,YCEtBmD,eARS,SAAApD,GAAK,MAAK,CAChC0D,QAASZ,EAAY9C,OAGI,SAAAqD,GAAQ,MAAK,CACtCM,aAAc,SAAA1D,GAAE,OAAIoD,ELaa,SAAApD,GAAE,MAAK,CACxC8B,KAAMoB,EACNI,QAAStD,GKfoBsE,CAAoBtE,QAGpCmD,CAA6CoB,G,kCCFtDC,E,4MACJzE,MAAQ,CACN0E,MAAM,G,EAaRC,OAAS,WACP,EAAK/D,SAAS,CAAE8D,MAAM,K,uDAXxB,WACE,IAAME,EAAKtD,aAAauD,QAAQ,YAC1BC,EAAQtD,KAAKuD,MAAMH,IACzBI,OAAOC,iBAAiB,OAAQ5D,KAAKsD,QAEhCG,KAELI,EADkB7D,KAAKJ,MAAfiE,OACFJ,K,oBAOR,WACE,IAAQJ,EAASrD,KAAKrB,MAAd0E,KAER,OACE,sBAAK/C,UAAWC,IAAMuD,QAAtB,UACE,cAAClB,EAAA,EAAD,CAAemB,GAAIV,EAAMR,QAAS,IAAKC,WAAYkB,IAAnD,SACE,6CAEF,cAAC,EAAD,CAAalE,QAASE,KAAKF,UAE3B,0CACA,0DACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAhCUkB,aA0CHe,cAAQ,MAJV,SAAAC,GAAQ,MAAK,CACxB6B,MAAO,SAAA7E,GAAQ,OAAIgD,ENrCc,SAAAhD,GAAQ,MAAK,CAC9C0B,KAAMoB,EACNI,QAASlD,GMmCmBiF,CAAoBjF,QAGnC+C,CAAoBqB,G,uBC5BpBc,4BAAgB,CAC7BlF,SAvBsB,WAAoC,IAAnCL,EAAkC,uDAA1B,GAA0B,yCAApB+B,EAAoB,EAApBA,KAAMwB,EAAc,EAAdA,QAC3C,OAAQxB,GACN,KAAKoB,EACH,OAAOI,EACT,KAAKJ,EACH,MAAM,GAAN,mBAAWnD,GAAX,CAAkBuD,IACpB,KAAKJ,EACH,OAAOnD,EAAM6C,QAAO,SAAAG,GAAC,OAAIA,EAAE/C,KAAOsD,KACpC,QACE,OAAOvD,IAeX6C,OAXoB,WAAoC,IAAnC7C,EAAkC,uDAA1B,GAA0B,yCAApB+B,EAAoB,EAApBA,KAAMwB,EAAc,EAAdA,QACzC,OAAQxB,GACN,KAAKoB,EACH,OAAOI,EACT,QACE,OAAOvD,MCjBPwF,EAAcD,0BAAgB,CAClC5C,kBAKa8C,EAFDC,sBAAYF,EAAaG,8BCFvCC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.3cd589da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3HeMt\",\"list\":\"ContactList_list__3rmXz\",\"button\":\"ContactList_button__29XGW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Y3v2Q\",\"button\":\"ContactForm_button__1stVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Group_enter__HdLaJ\",\"enterActive\":\"Group_enterActive__u9Kaj\",\"exit\":\"Group_exit__2vF9o\",\"exitActive\":\"Group_exitActive__rpfck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"MyPhonebook_enter__1BCbO\",\"enterActive\":\"MyPhonebook_enterActive__bWF-T\",\"exit\":\"MyPhonebook_exit__1gich\",\"exitActive\":\"MyPhonebook_exitActive__2TbZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__CUnGZ\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static PropsType = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n\n  state = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  componentDidUpdate(prevProps) {\n    const { contacts } = this.props;\n    if (prevProps.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  sortName = (contacts, name) =>\n    contacts.some(contact => contact.name === name);\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      id: shortid.generate(),\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { value } = e.target.name;\n    e.preventDefault();\n    const i = this.sortName(this.props.contacts, value);\n    if (!i) {\n      this.props.addUser(this.state);\n    } else {\n      alert(`${value} is already in contacts`);\n    }\n\n    this.setState({\n      id: '',\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={style.form}>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            id=\"name\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"namber\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={style.button}>\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { createSelector } from 'reselect';\n\nexport const getContacts = state => state.filterReducer.contacts;\n\nexport const getFilter = state => state.filterReducer.filter;\n\nexport const inputFilter = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(i => i.name.toLowerCase().includes(filter.toLowerCase())),\n);\n","export const ActionsType = {\n  FILTER_START: 'FILTER_START',\n  FILTER_SUCCESS: 'FILTER_SUCCESS',\n  FILTER_ERROR: 'FILTER_START',\n  CONTACT_ADD: 'CONTACT_ADD',\n  CONTACT_DELETE: 'CONTACT_DELETE',\n  INPUT_FILTER: 'INPUT_FILTER',\n};\n\nexport const filerStartActions = () => ({\n  type: ActionsType.FILTER_START,\n});\n\nexport const filerSuccessActions = contacts => ({\n  type: ActionsType.FILTER_SUCCESS,\n  payload: contacts,\n});\n\nexport const contactAddAction = name => ({\n  type: ActionsType.CONTACT_ADD,\n  payload: name,\n});\n\nexport const contactDeleteAction = id => ({\n  type: ActionsType.CONTACT_DELETE,\n  payload: id,\n});\n\nexport const filterInputAction = string => ({\n  type: ActionsType.INPUT_FILTER,\n  payload: string,\n});\n","import { connect } from 'react-redux';\nimport ContactForm from './ContactForm';\nimport { getContacts } from '../../redux/filterSelector';\nimport { contactAddAction } from '../../redux/filterAction';\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: user => dispatch(contactAddAction(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\n\nfunction Filter({ filter = '', handleFilter }) {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={filter}\n        onChange={handleFilter}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport { filterInputAction } from '../../redux/filterAction';\nimport { getFilter } from '../../redux/filterSelector';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleFilter: e => dispatch(filterInputAction(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport style from './ContactList.module.css';\nimport group from './Group.module.css';\n\nfunction Filter({ example = [], handleDelete }) {\n  return (\n    <div className={style.contacts}>\n      {example.length > 0 && (\n        <TransitionGroup component=\"ul\" className={style.contact}>\n          {example.map(item => (\n            <CSSTransition key={item.id} timeout={500} classNames={group}>\n              <li key={item.id} className={style.list}>\n                {item.name} : {item.number}\n                <button\n                  className={style.button}\n                  type=\"submit\"\n                  onClick={() => handleDelete(item.id)}\n                >\n                  X\n                </button>\n              </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      )}\n    </div>\n  );\n}\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport ContactList from './ContactList';\nimport { inputFilter } from '../../redux/filterSelector';\nimport { contactDeleteAction } from '../../redux/filterAction';\n\nconst mapStateToProps = state => ({\n  example: inputFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelete: id => dispatch(contactDeleteAction(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport ContactForm from './components/ContastForm/ContactFormContainer';\nimport Filter from './components/Filter/FilterContainer';\nimport ContactList from './components/ContactList/ContactListContainer';\nimport { filerSuccessActions } from './redux/filterAction';\nimport myPhonebook from './MyPhonebook.module.css';\nimport style from './App.module.css';\n\nclass App extends Component {\n  state = {\n    isOn: false,\n  };\n\n  componentDidMount() {\n    const ls = localStorage.getItem('contacts');\n    const items = JSON.parse(ls);\n    window.addEventListener('load', this.onProp);\n\n    if (!items) return;\n    const { fetch } = this.props;\n    fetch(items);\n  }\n\n  onProp = () => {\n    this.setState({ isOn: true });\n  };\n\n  render() {\n    const { isOn } = this.state;\n\n    return (\n      <div className={style.wrapper}>\n        <CSSTransition in={isOn} timeout={500} classNames={myPhonebook}>\n          <h1>Phonebook</h1>\n        </CSSTransition>\n        <ContactForm addUser={this.addUser} />\n\n        <h2>Contacts</h2>\n        <span>Find contacts by name:</span>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mdtp = dispatch => ({\n  fetch: contacts => dispatch(filerSuccessActions(contacts)),\n});\n\nexport default connect(null, mdtp)(App);\n","import { combineReducers } from 'redux';\nimport { ActionsType } from './filterAction';\n\nconst contactsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case ActionsType.FILTER_SUCCESS:\n      return payload;\n    case ActionsType.CONTACT_ADD:\n      return [...state, payload];\n    case ActionsType.CONTACT_DELETE:\n      return state.filter(i => i.id !== payload);\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case ActionsType.INPUT_FILTER:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { combineReducers, createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport filterReducer from './filterReducer';\n\nconst rootStorage = combineReducers({\n  filterReducer,\n});\n\nconst store = createStore(rootStorage, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/srore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}